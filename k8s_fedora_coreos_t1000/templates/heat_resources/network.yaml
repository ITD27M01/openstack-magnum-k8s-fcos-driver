---
heat_template_version: rocky

description: >
  Creates network resources for the cluster. allocate a network and
  router for our server.

parameters:
  availability_zone:
    type: string
    default: ""

  existing_network:
    type: string
    default: ""

  existing_subnet:
    type: string
    default: ""

  private_network_cidr:
    type: string
    description: network range for fixed ip network

  private_network_name:
    type: string
    description: fixed network name
    default: ""

  dns_nameserver:
    type: comma_delimited_list
    description: address of a dns nameserver reachable in your environment

  external_network:
    type: string
    description: uuid/name of a network to use for floating ip addresses

resources:
  private_network:
    type: Magnum::Optional::Neutron::Net
    properties:
      name: {get_param: private_network_name}
      # value_specs:
      #   availability_zone_hints:
      #     - {get_param: availability_zone}

  private_subnet:
    type: Magnum::Optional::Neutron::Subnet
    properties:
      cidr: {get_param: private_network_cidr}
      network: {get_resource: private_network}
      dns_nameservers: {get_param: dns_nameserver}

  extrouter:
    type: Magnum::Optional::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: external_network}
      # ha: false
      # value_specs:
      #   availability_zone_hints:
      #     - {get_param: availability_zone}

  extrouter_inside:
    type: Magnum::Optional::Neutron::RouterInterface
    properties:
      router_id: {get_resource: extrouter}
      subnet: {get_resource: private_subnet}

  network_switch:
    type: Magnum::NetworkSwitcher
    depends_on:
      - extrouter_inside
    properties:
      private_network: {get_resource: private_network}
      private_subnet: {get_resource: private_subnet}
      existing_network: {get_param: existing_network}
      existing_subnet: {get_param: existing_subnet}

outputs:
    fixed_network:
      description: >
        Network ID where to provision machines
      value: {get_attr: [network_switch, network]}
    fixed_subnet:
      description: >
        Subnet ID where to provision machines
      value: {get_attr: [network_switch, subnet]}
